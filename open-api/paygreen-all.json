{
  "swagger": "2.0",
  "info": {
    "title": "Intégration de PayGreen par API",
    "description": "# API d'intégration complète<br />\n<br />\nCette documentation est la compilation de toutes nos documentations d'intégration de la solution de paiement PayGreen, qu'il s'agisse d'une intégration simple, sur un CMS ou sur une marketplace notamment.<br />\n<br />\nSi vous intégrez PayGreen dans une optique bien précise, n'hésitez pas à consulter nos documentations simplifiées&nbsp;:<br />\n- [API de paiement](api-documentation-categorie?cat=paiement)&nbsp;: la documentation pour intégrer le plus simplement PayGreen sur votre e-commerce.<br />\n- [API d'intégration sur un CMS](api-documentation-categorie?cat=cms)&nbsp;: intégrez PayGreen sur votre CMS.<br />\n- [API d'intégration pour une MarketPlace](api-documentation-categorie?cat=mkp)&nbsp;: intégrez PayGreen sur votre MarketPlace.<br />\n<br />\n> Nous nous efforçons d'étoffer et de clarifier cette documentation au fil du temps afin de simplifier au maximum l'intégration de notre solution. Toutefois, si certains points demeurent problématiques, notre équipe technique est joignable à l'adresse serviceclient@paygreen.fr et vous répondra dans les meilleurs délais.<br />\n## Flux de paiement<br />\n<br />\nLe schéma suivant représente le fonctionnement de cette API lorsqu'un consommateur effectue un paiement sur un site e-commerce&nbsp;:<br />\n<br />\n![Schéma de flux](../api/img/schema-flux.svg)<br />\n<br />\n1. Le consommateur remplit et **valide son panier**.<br />\n2. Le e-commerce envoie à PayGreen les informations permettant de **créer le paiement**.<br />\n3. Le consommateur règle sa commande sur une **interface de paiement PayGreen**&nbsp;: selon la configuration de la boutique, il s'agit soit d'une **page déportée**, soit d'un affichage en iframe (**insite**) sur le site e-commerce.<br />\n4. Le consommateur est automatiquement **redirigé** sur le e-commerce (paramètre `returned_url`).<br />\n5. PayGreen envoie l'**IPN de la transaction** au e-commerce (paramètre `notified_url`). Il s'agit d'une notification permettant au e-commerce de mettre à jour le statut d'une commande. L'IPN contient en effet les informations sur la transaction (*voir le paragraphe consacré dans les chapitres [Les transactions](#tag/Les-transactions) et [Les virements](#tag/Les-virements) pour plus de détails*).<br />\n6. Le e-commerce renvoit une **demande de détails** sur la transaction. Cette étape n'est pas absolument obligatoire, mais elle est fortement recommandée pour des raisons de sécurité&nbsp;: en effet, recevoir une IPN ne garantit pas la véracité des informations transmises (elle peut être envoyée par un tiers souhaitant compromettre vos données). Cette demande permet donc de **vérifier les informations transmises** par l'IPN.<br />\n7. Un message de confirmation informe le consommateur que la transaction **a été effectuée** avec succès (ou a échoué si tel est le cas).<br />\n# Pré-requis<br />\n## Identifiant et clé privée<br />\n<br />\nPour tout appel API PayGreen, vous aurez besoin de renseigner l'*identifiant PayGreen* (`shop ID`) et parfois, la *clé privée* de la boutique. <br />\nCes deux informations se trouvent à différents endroits sur le [back-office PayGreen](../shop/wizard-activation)&nbsp;:<br />\n- En bas à gauche de la ***page d'activation*** (1)&nbsp;;<br />\n- Dans la fenêtre accessible sur chaque page du back-office en cliquant sur le lien ***Toutes mes boutiques*** (2).<br />\n<br />\n![Capture 1](../api/img/id-privatekey-1.png)<br />\n*Capture 1*<br />\n<br />\n![Capture 1](../api/img/id-privatekey-2.png)<br />\n*Capture 2*<br />\n## Paramétrage de l'interface de paiement<br />\n<br />\nBeaucoup d'options relatives à l'interface de paiement sont disponibles directement dans le back-office PayGreen&nbsp;: il n'est donc pas nécessaire d'être développeur pour personnaliser la page de paiement. <br />\nParmi les options à votre disposition, le e-commerçant a la possibilité de choisir son type d'interface de paiement&nbsp;:<br />\n- Par défaut, il s'agit d'une **page de paiement** externe au site e-commerce, sur laquelle le consommateur est redirigé après validation de son panier. **Aucune manipulation n'est nécessaire pour opter pour ce type d'interface**. Elle présente l'avantage d'être parfaitement responsive sans que vous n'ayez à développer quoi que ce soit. Le e-commerçant peut en outre ajouter son logo et en personnaliser le wording et le fond de la page.<br />\n- L'**insite** est le second type d'interface à la disposition du e-commerçant. Il lui permet d'afficher l'interface dans un *iframe* intégré à son site e-commerce&nbsp;: cela permet de conserver un tunnel de paiement uniforme. Cette option n'est accessible que sur activation du module par notre équipe d'account managers (que vous pouvez contacter à serviceclient@paygreen.fr). Une fois le module *insite* activé, il suffit d'afficher sur le e-commerce un iframe ayant pour URL le lien fourni, en y ajoutant à la fin la mention `?display=insite`.<br />\n<br />\n# Titres restaurant<br />\n<br />\nCe chapitre vous concerne si&nbsp;:<br />\n1. Votre activité est liée à la **restauration**.<br />\n2. Vous êtes **conventionné** pour recevoir des paiements en titres restaurant ou pouvez le devenir.<br />\n<br />\nPayGreen vous permet d'intégrer simplement plusieurs moyens de paiement pour régler des **achats éligibles aux titres restaurant**. Par ailleurs, PayGreen gère intégralement les éventuels **compléments** (en carte bancaire ou American Express).<br />\n<br />\n## Les moyens de paiement Restauration<br />\n<br />\n### Titres Restaurant Dématérialisés `TRD`<br />\n<br />\nCe moyen de paiement vous permet d'encaisser les paiements réalisés via n'importe quelle carte du **réseau Conecs**&nbsp;:<br />\n- Apetiz (Natixis)<br />\n- Pass Restaurant (de Sodexo)<br />\n- Up Chèque Déjeuner<br />\n<br />\nSi le solde de la carte est insuffisant pour régler la totalité du panier, un **moyen de paiement complémentaire** sera utilisé pour régler le montant restant (*exemple&nbsp;: CB/Visa/MasterCard*). Cette opération est réalisée automatiquement côté PayGreen à partir de la configuration de votre moyen de paiement (réalisée par notre support)&nbsp;: vous n'avez **aucun appel API à effectuer**.<br />\n<br />\n### Resto Flash `RESTOFLASH`<br />\n<br />\nCe moyen de paiement permet à vos clients de régler leur achat en utilisant leur **compte Resto Flash**. Il s'agit d'un moyen de paiement 100&#37; digital, sans carte à renseigner, et optimisé pour une expérience mobile. Le consommateur alimente son compte Resto Flash avec ses tickets restaurant papier, ce qui lui permet de les utiliser en ligne.<br />\n<br />\n### Lunchr `LUNCHR`<br />\n<br />\nLunchr est une alternative au réseau Conecs et aux titres restaurant papier. Les employeurs qui choisissent ce prestataire pour les titres restaurant permettent à leurs salariés de disposer d'une carte du réseau MasterCard, sur laquelle le solde journalier est crédité. Les consommateurs peuvent suivre l'évolution de leur solde via une application mobile.<br />\n<br />\n## Activer un moyen de paiement<br />\n<br />\nPar défaut (*sous réserve d'acceptation de vos documents justificatifs ou de votre numéro VAD lors de votre inscription sur PayGreen*) votre boutique peut encaisser des paiements par carte bancaire CB/Visa/MasterCard.<br />\nSi vous souhaitez proposer d'autres moyens de paiement à vos clients, il vous suffit d'en faire la demande auprès de notre support à l'adresse serviceclient@paygreen.fr.<br />\n<br />\n## Appels API<br />\n<br />\nUne fois vos moyens de paiement activés par notre support, vous pourrez les utiliser pour créer des transactions. Voici la procédure à suivre&nbsp;:<br />\n1. Envoyez une requête (GET) pour obtenir la [liste de vos moyens de paiement activés](#tag/Les-moyens-de-paiement) (paragraphe **Liste des moyens de paiement**).<br />\n2. Vérifiez que la réponse reçue (*voir l'exemple de réponse dans le lien ci-dessus*) renvoie bien le ou les moyens de paiement souhaités. Cela vous évitera de créer une transaction pour un moyen de paiement désactivé, ce qui ferait échouer la transaction.<br />\n3. Vérifiez le paramètre `availablePaymentMode`&nbsp;: il doit contenir le ou les modes de paiement (*comptant, abonnement&hellip;*) qui peuvent être effectués avec le moyen de paiement correspondant. Cela vous évitera de créer une transaction dont le type n'est pas pris en charge par le moyen de paiement (*exemple&nbsp;: les moyens de paiement \"Titres restaurant\" ne permettent pas de faire du paiement par abonnement*). <br />\n4. Enfin, récupérez le tableau renvoyé dans le paramètre `iframe`&nbsp;: il vous indique, pour chaque mode de paiement, quelle est la **taille minimale conseillée** (en pixels) pour l'iframe qui contiendra l'interface de paiement PayGreen. Nous vous conseillons de respecter ces préconisations afin d'optimiser l'expérience de paiement de vos clients.<br />\n5. Une fois toutes ces informations en main, vous pouvez créer une [transaction](#tag/Les-transactions).",
    "version": "1.0.0",
    "contact": {
      "email": "serviceclient@paygreen.fr"
    }
  },
  "tags": [
    {
      "name": "Authentification OAuth",
      "description": "OAuth est le protocole permettant d'autoriser un site web (ici, celui du e-commerçant, qu'il soit sur un CMS ou une MarketPlace) à **accéder à une API sécurisée** (en l'occurrence, l'API PayGreen) pour le compte d'un utilisateur (ici, le e-commerçant).<br />\n<br />\nChaque e-commerçant doit avoir **sa propre boutique PayGreen** (*qu'il s'agisse d'une boutique autonome dans le cas d'un CMS ou d'une sous-boutique dans le cas d'une MarketPlace*)&nbsp;: or, l'identifiant unique (`shop ID`) et la clé privée de la boutique sont nécessaires pour les appels API.<br />\nVous pouvez donner la possibilité au e-commerçant de les renseigner lui-même dans son back-office, mais la solution la plus simple pour lui que vous intégriez le **PayGreen Connect** avec le protocole OAuth.<br />\nLe processus client est le suivant&nbsp;:<br />\n<br />\n1. Dans votre back-office, vous lui proposez de créer ou connecter son **compte PayGreen** à votre CMS/MarketPlace.<br />\n2. Au clic du e-commerçant sur le bouton proposé, vous ***créez un token d'accès au protocole OAuth*** puis vous ***affichez la page d'authentification PayGreen***.<br />\n3. Grâce aux informations renseignées précédemment (`email`, `name` et `phoneNumber`), le formulaire de connexion/inscription PayGreen est déjà **pré-rempli avec les données du e-commerçant**. Il n'a plus qu'à confirmer pour créer son compte PayGreen.<br />\n4. Une fois le compte créé (*ou connecté si le e-commerçant avait déjà un compte PayGreen*), le e-commerçant est **redirigé sur votre back-office** (grâce au paramètre `redirect_uri` renseigné précédemment).<br />\n5. Vous aurez à ce stade récupéré un paramètre `clientId`. Il vous permet, grâce au ***contrôle OAuth***, de récupérer toutes les **informations utiles sur la boutique PayGreen** du e-commerçant (et notamment l'identifiant unique `id` et la clé privée `privateKey` qui vous permettront de réaliser les prochains appels API)."
    },
    {
      "name": "Gestion de la boutique",
      "description": "Retrouvez ici toutes les méthodes pour gérer la boutique PayGreen du e-commerce&nbsp;: afficher et mettre à jour ses informations d'une boutique, et créer et activer un compte chez nos partenaires bancaires.<br />\n<br />\n> **Méthodes *Multi-boutiques*&nbsp;:** le multi-boutiques est une option liée aux **MarketPlaces**. Si vous intégrez PayGreen pour un **CMS**, il est donc inutile de vous intéresser à ces méthodes."
    },
    {
      "name": "Gestion de mes boutiques",
      "description": "Service permettant de gérer vos boutiques."
    },
    {
      "name": "Gestion du compte principal",
      "description": "Service permettant de gérer votre compte principal"
    },
    {
      "name": "Gestion de l'adresse",
      "description": "Gérez l'adresse de votre entreprise"
    },
    {
      "name": "Gestion des propriétaires",
      "description": "Gérez les propriétaires de la boutique"
    },
    {
      "name": "Gestion des documents/KYCs",
      "description": "Gérez vos documents"
    },
    {
      "name": "Les moyens de paiement",
      "description": "Pour créer des transactions, vous aurez besoin de savoir quels sont les moyens de paiement disponibles et **activés** sur votre boutique, et les devises pour chacun.<br />\n<br />\nEn effet, lors de la création d'une transaction, le **moyen de paiement** et la **devise** doivent être renseignés. Il est donc préférable d'envoyer une requête afin de récupérer les moyens de paiement disponibles **avant** de créer une transaction, ce afin d'éviter toute erreur liée à l'absence du moyen de paiement ou de la devise souhaités.<br />\n<br />\nLe moyen de paiement `CB/Visa/MasterCard` est activé par défaut pour chaque boutique (sous réserve de validation du compte par notre support). Actuellement, les autres moyens de paiement sont disponibles exclusivement sur demande auprès du support PayGreen (serviceclient@paygreen.fr), qui se chargera d'activer les moyens de paiement souhaités.<br />\n<br />\nVoici la liste complète des moyens de paiement proposés par PayGreen&nbsp;:<br />\n<br />\n<table><tbody><tr><th>Moyens de paiement <code>paymentType</code></th><th>Devise <code>currency</code></th><th>Modes de paiement <code>availablePaymentMode</code></th><th>Complémentaire*</th></tr><tr><td>CB/Visa/Mastercard <code>CB</code></td><td><li>Euros <code>EUR</code></li></td><td><ul><li>Comptant <code>CASH</code></li><li>Abonnement <code>RECURRING</code></li><li>N fois <code>XTIME</code></li><li>Avec confirmation <code>TOKENIZE</code></li></ul></td><td>&#10004;&nbsp;Oui</td></tr><tr><td>American Express <code>AMEX</code></td><td><li>Euros <code>EUR</code></li></td><td><ul><li>Comptant <code>CASH</code></li></ul></td><td>&#10004;&nbsp;Oui</td></tr><tr><td>e-Chèque-Vacances <code>ECV</code></td><td><li>Euros <code>EUR</code></li></td><td><ul><li>Comptant <code>CASH</code></li></ul></td><td>&#10060;&nbsp;Non</td></tr><tr><td>Titres Restaurant Dématérialisés <code>TRD</code></td><td><li>Euros <code>EUR</code></li></td><td><ul><li>Comptant <code>CASH</code></li></ul></td><td>&#10060;&nbsp;Non</td></tr><tr><td>Resto Flash <code>RESTOFLASH</code></td><td><li>Euros <code>EUR</code></li></td><td><ul><li>Comptant <code>CASH</code></li></ul></td><td>&#10060;&nbsp;Non</td></tr><tr><td>Lunchr <code>LUNCHR</code></td><td><li>Euros <code>EUR</code></li></td><td><ul><li>Comptant <code>CASH</code></li></ul></td><td>&#10060;&nbsp;Non</td></tr><tr><td>Prélèvement SEPA <code>SEPA</code></td><td><li>Euros <code>EUR</code></li></td><td><ul><li>Comptant <code>CASH</code></li><li>Abonnement <code>RECURRING</code></li><li>N fois <code>XTIME</code></li></ul></td><td>&#10060;&nbsp;Non</td></tr></tbody></table><br />\n<br />\n<blockquote><strong>Complémentaire*&nbsp;:</strong> certains moyens de paiement ne permettent pas toujours de régler un achat en intégralité (<em>exemple&nbsp;: les titres restaurant dématérialisés, qui ne permettent de régler que 19&nbsp;€ par jour maximum</em>). Dans ce cas, un moyen de paiement <strong>complémentaire</strong> sera mis en oeuvre afin de permettre au consommateur de régler le montant complémentaire. Pour plus de détails, consultez la section ci-dessous.</blockquote><br />\n<br />\n<h2>Moyens de paiement avec complément</h2><br />\nCertains moyens de paiement peuvent nécessiter un moyen de paiement complémentaire pour permettre au consommateur de régler, sans perte, l'intégralité de sa commande.<br />\n<ul><li><strong>e-Chèques-Vacances&nbsp;:</strong> le montant des e-Chèques-Vacances est généralement de 60&nbsp;€. Si un panier dépasse ce montant et n'est pas un multiple de celle valeur (120&nbsp;€, 180&nbsp;€, etc), la part complémentaire (par exemple&nbsp;: 10&nbsp;€ dans le cas d'un panier de 70&nbsp;€) doit donc être réglée avec un autre moyen de paiement. Les e-Chèques-Vacances ne peuvent être utilisés que pour de l'hébergement, voyages, transports, culture, loisirs (etc) auprès de professionnels conventionnés par ANCV.</li><li><strong>Resto Flash, Titres Restaurant Dématérialisés, Lunchr&nbsp;:</strong> ces moyens de paiement permettent de régler exlusivement des produits alimentaires (hors alcool notamment) pour un montant journalier maximum de 19&nbsp;€ (certaines cartes ne sont pas utilisables le week-end). L'excédent et les produits non éligibles doivent donc être réglés avec un autre moyen de paiement.</li></ul><br />\nLorsque le support PayGreen active l'un de ces moyens de paiement sur votre boutique, il définit également le ou les <strong>moyens de paiement complémentaires</strong> qui permettront à vos clients de régler leur achat en totalité. Si deux moyens de paiement complémentaires sont disponibles (exemple&nbsp;: CB/Visa/MasterCard et American Express), vos clients pourront <strong>choisir avec lequel ils souhaitent régler la part complémentaire</strong>.<br />\n<br />\nAinsi, lors de la requête pour la création d'un paiement, le moyen de paiement à renseigner dans le paramètre <code>paymentType</code> est le <strong>moyen de paiement principal</strong> (exemple&nbsp;: <code>TRD</code> si vous proposez à vos clients de payer avec des Titres Restaurant Dématérialisés). Le moyen de paiement complémentaire est défini automatiquement en fonction des paramétrages de votre boutique.<br />\n<br />\n<br />\n<h3>Montant éligible</h3><br />\nLes moyens de paiement détaillés ci-dessus (<em>notamment les e-Chèques-Vacances ou les Titres Restaurant Dématérialisés</em>) ne permettent de payer que certains types de produits ou services. Dans le cas d'un panier contenant à la fois des produits éligibles et des produits non-éligibles, il faudra donc distinguer le <strong>montant éligible</strong>, payable avec un e-Chèque-Vacances ou un Titre Restaurant Dématérialisé par exemple, du montant total du panier.<br />\n<br />\nAinsi, si votre client doit régler un commande d'un montant total de 17&nbsp;€ dont 10&nbsp;€ sont éligibles aux Titres Restaurant Dématérialisés, la requête de création du paiement comptant devra comprendre les paramètres suivants&nbsp;:<br />\n<br />\n<pre><code>{<br />\n \"amount\": 1700,<br />\n \"paymentType\": \"TRD\",<br />\n \"eligibleAmount\": {<br />\n \"TRD\": \"1000\"<br />\n },<br />\n}</code></pre>"
    },
    {
      "name": "Les transactions",
      "description": "Gérez vos transactions&nbsp;: créez un paiement, confirmez une transaction, remboursez totalement ou partiellement et accédez aux détails d'une transaction.<br />\n<br />\nAvant de vous intéresser aux transactions, consultez la section [Les moyens de paiement](#tag/Les-moyens-de-paiement) qui vous renseignera sur les paramètres `paymentType` et `currency`.<br />\n<br />\n*L'ordre des chapitres ci-dessous ne reflète absolument pas l'ordre dans lequel vous devez intégrer cette API&nbsp;: la **création du paiement** est la première étape.*<br />\n<br />\n## IPN d'une transaction<br />\n<br />\nL'IPN (Instant Payment Notification) est la notification envoyée au serveur du e-commerce (paramètre `notified_url`) lorsque le statut d'un paiement change (*par exemple, lorsqu'un paiement est validé*). L'envoi de l'IPN peut parfois prendre plusieurs minutes.<br />\n<br />\nL'IPN d'une transaction permet ainsi de mettre à jour le **statut des commandes** côté e-commerce.<br />\n<br />\n**Attention&nbsp;:** l'IPN n'est envoyée que si les deux conditions suivantes sont remplies&nbsp;:<br />\n- L'URL de callback (paramètre `notified_url`) doit être renseignée&nbsp;<br />\n- Le statut de la transaction doit être **validé** (`SUCCESSED`), **refusé** (`REFUSED`) ou **en cours d'exécution** (`PENDING_EXEC`). Les IPN ne sont pas envoyées lorsqu'un paiement est remboursé ou annulé&nbsp;: en effet, il s'agit d'actions manuelles dont le e-commerce a donc nécessairement connaissance. Il est alors inutile de spammer les serveurs.<br />\n<br />\n<table><tbody><tr><th>Paramètres</th><th>Exemples de valeur</th><th>Commentaires</th></tr><tr><td><code>data</code></td><td><code>&hellip;</code></td><td>Chaîne de caractères encodée à partir des données compilées de la transaction. Ce champ est encore utilisé par certains modules. <strong>Attention&nbsp;: ce paramètre est déprécié, évitez de l'utiliser.</strong></td></tr><tr><td><code>pid</code></td><td><code>tr15acde62ecfc1b8a2a1706b3f17a714e</code></td><td>ID de la transaction</td></tr><tr><td><code>result</code></td><td><code>SUCCESSED</code></td><td>Statut de la transaction. Ne peut être que <code>SUCCESSED</code>, <code>REFUSED</code> ou <code>PENDING_EXEC</code>.</td></tr><tr><td><code>orderId</code></td><td><code>test-123</code></td><td>Renseigné dans l'<code>orderId</code> du <code>metadata</code></td></tr><tr><td><code>userId</code></td><td><code>123654789</code></td><td>ID du<code>buyer</code></td></tr><tr><td><code>shopId</code></td><td><code>ce642ce1613b47667dbd3785e5faf666</code></td><td>Votre identifiant unique <code>shop ID</code></td></tr><tr><td><code>amount</code></td><td><code>9900</code></td><td>Montant en centimes</td></tr><tr><td><code>createdAt</code></td><td><code>2018-12-27T11:07:59Z</code></td><td>Date et heure de la création de la transaction</td></tr><tr><td><code>valueAt</code></td><td><code>2018-12-27T11:07:59Z</code></td><td>Date et heure auxquelles PayGreen envoie la demande de transaction au partenaire bancaire</td></tr><tr><td><code>answeredAt</code></td><td><code>2018-12-27T11:07:59Z</code></td><td>Date et heure auxquelles le partenaire bancaire répond à la demande</td></tr></tbody></table>"
    },
    {
      "name": "L'empreinte de carte",
      "description": "L'empreinte de carte bancaire est ce qui permet de prélever vos clients en différé&nbsp;: le consommateur renseigne ses informations de carte et vous permet de les utiliser pour un paiement ultérieur, sans qu'il ait à les renseigner à nouveau.<br />\n<br />\nUne empreinte de carte **n'est pas une transaction**&nbsp;: aucun prélèvement n'est effectué lors de l'empreinte. Pour prélever votre client, vous devez impérativement créer une transaction&nbsp;: vous renseignerez à ce moment-là l'`id` transmis lors de l'empreinte afin de débiter la carte bancaire (dans l'IPN, il s'agira du `pid`).<br />\n<br />\nL'empreinte de carte est disponible **uniquement** pour les **paiements comptants**, les **paiements par abonnements** et les **paiements en plusieurs fois**.<br />\n<br />\nIl est possible de faire un empreinte de carte pour la signature d'un mandat. Dans ce cas, le paramètre `\"paymentType\" : \"SEPA\"` doit être ajouté dans la requête. Par défaut, l'empreinte de carte est réglée sur `CB`. Le fonctionnement reste le même par la suite.<br />\n<br />\n> Dans le cas du mode d'intégration *MarketPlace*, l'empreinte de carte se fait sur le compte et non la boutique. L'empreinte de carte est donc utilisable sur toutes les boutiques d'un même compte.<br />\n<br />\n> Avec l'API de paiement PayGreen, l'empreinte de carte est gérée automatiquement lors de la création d'un paiement. **Vous n'avez donc pas besoin de réaliser une empreinte de carte ou de renseigner le paramètre `card` lorsque vous exécutez un paiement**.<br />\nNéanmoins, dans le cas où vous souhaiteriez gérer vous-même l'empreinte de carte, les informations ci-dessous vous sont nécessaires."
    },
    {
      "name": "Paiement multidestinataire",
      "description": "Spliter une transaction"
    },
    {
      "name": "Gestion d'une association",
      "description": "Action sur les association"
    },
    {
      "name": "Les dons",
      "description": "Créez, gérez et supprimer les dons effectués par les consommateurs lors de leur achat, dans le cadre de nos options solidaires&nbsp;: l'**Arrondi** et **Tree** (compensation carbone)."
    },
    {
      "name": "Recherche",
      "description": "Effectuez les recherches sur une transaction"
    },
    {
      "name": "Gestion de mes RIB",
      "description": "Service permettant de gérer les RIB liés à votre boutique."
    },
    {
      "name": "Les virements",
      "description": "Avec PayGreen, vous avez la possibilité de **gérer vos virements par API** (notamment pour programmer des virements automatiques). Vous pouvez effectuer un virement vers votre compte bancaire (grâce au paramètre `bankId`, qui correspond à l'id d'un RIB) ou bien vers une autre boutique PayGreen (en remplaçant le paramètre `bankId` par `shopId`, qui correspond à l'id d'une autre de vos boutiques.<br />\n<br />\nPar défaut, les virements sont exécutés immédiatement."
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/auth/": {
      "post": {
        "tags": [
          "Authentification OAuth"
        ],
        "summary": "Création d'un token d'accès au protocole OAuth",
        "description": "Cette méthode permet de créer un token d'accès au protocole OAuth **PayGreen Connect&nbsp;:** vous recevez dans la réponse les paramètres `accessPublic` et `accessSecret` qui vous seront utiles pour la suite.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AuthAccessToken",
            "description": "Token d'accès OAuth",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthAccessToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/AuthAccessToken"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "AuthAccessToken Not Found"
          }
        }
      }
    },
    "/api/auth/authorize": {
      "get": {
        "tags": [
          "Authentification OAuth"
        ],
        "summary": "Affichage de la page d'authentification PayGreen",
        "description": "Cette méthode permet d'afficher la page d'authentification PayGreen. Via cette infertace, vos utilisateurs pourront se connecter ou s'inscrire sur PayGreen en utilisant le protocole OAuth&nbsp;: une partie des informations sont pré-remplies grâce aux informations transmises dans la méthode de création d'un token d'accès (détaillée précédemment).",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "client_id",
            "description": "Variable OAuth contenant `accessPublic`. Exemple&nbsp;: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "redirect_uri",
            "description": "Variable OAuth contenant l'URL de retour une fois l'utilisateur identifié. Par exemple : http://example.com/mon-url-de-retour",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "response_type",
            "description": "Variable OAuth concernant le style de réponse. Par exemple : code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/\\Zend\\Http\\Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "\\Zend\\Http\\Response Not Found"
          }
        }
      }
    },
    "/api/auth/accessToken": {
      "post": {
        "tags": [
          "Authentification OAuth"
        ],
        "summary": "Contrôle OAuth",
        "description": "Cette méthode permet de contrôler le retour après l'authentification OAuth, et permet de **récupérer les données de la boutique** (*voir l'exemple de réponse pour la liste complète des informations retournées*).",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "client_id",
            "description": "Variable OAuth contenant `accessPublic`. Exemple&nbsp;: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grant_type",
            "description": "Variable OAuth contenant la valeur du \"grant type\" OAuth (valeur: authorization_code)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "code",
            "description": "Variable OAuth contenant le code generate après l'appel authorize OAuth",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Shop"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Shop Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/shop/{shopId}": {
      "get": {
        "tags": [
          "Gestion de la boutique"
        ],
        "summary": "Multi-boutiques : afficher une boutique",
        "description": "Cette méthode permet de récupérer la configuration d'une boutique donnée `shopId`.<br />\n<br />\n> **Méthode *Multi-boutiques*&nbsp;:** le multi-boutiques est une option liée aux **MarketPlaces**. Si vous intégrez PayGreen pour un **CMS** ou directement sur un site e-commerce, il est donc inutile de vous intéresser à cette méthode.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "shopId",
            "description": "Identifiant unique d'une boutique",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Shop"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Shop Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Gestion de la boutique"
        ],
        "summary": "Multi-boutiques : mettre à jour une boutique",
        "description": "Cette méthode permet de mettre à jour certaines informations d'une boutique donnée `shopId`.<br />\n<br />\n> **Méthode *Multi-boutiques*&nbsp;:** le multi-boutiques est une option liée aux **MarketPlaces**. Si vous intégrez PayGreen pour un **CMS** ou directement sur un site e-commerce, il est donc inutile de vous intéresser à cette méthode.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "shopId",
            "description": "Identifiant unique d'une boutique",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Shop",
            "description": "Modèle de données d'une boutique",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shop"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Shop"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Shop Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/shop": {
      "get": {
        "tags": [
          "Gestion de la boutique"
        ],
        "summary": "Afficher la boutique",
        "description": "Cette méthode permet de récupérer la configuration de la boutique (*boutique principale dans le cas du **Multi-boutiques***).",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Shop"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Shop Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Gestion de la boutique"
        ],
        "summary": "Mettre à jour la boutique",
        "description": "Cette méthode permet de mettre à jour certaines informations de la boutique (*boutique principale dans le cas du **Multi-boutiques***). Seules les informations présentes dans l'exemple peuvent être modifiées.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Shop",
            "description": "Modèle de données d'une boutique",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shop"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Shop"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Shop Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Gestion de la boutique"
        ],
        "summary": "Création et activation d'un compte",
        "description": "Cette méthode a deux actions&nbsp;:<br />\n1. Faire une demande de création d'un compte chez l'un de nos **partenaires bancaires** (liés aux **moyens de paiement** souhaités). Pour demander la création du compte, il vous suffit de passer le paramètre `validate` à `true`. Sinon, laissez ce paramètre à `false`.<br />\n2. Passer la boutique **en production** ou **en test**&nbsp;: le paramètre `activate` permet, s'il est égal à `true`, de passer la boutique en production, ce qui permet au e-commerce d'encaisser les paiements des consommateurs. S'il est égal à `false`, la boutique passera en mode test, auquel cas il n'y aura que des transactions fictives sur le e-commerce (il s'agit du mode à choisir lors de l'intégration de PayGreen). Pas défaut, une boutique est toujours en **mode test**.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "ShopPatch",
            "description": "- `\"validate\" = true` permet de demander la création du compte de la boutique chez notre partenaire bancaire&nbsp;;<br />\n- `\"activate\" = true` permet de passer la boutique en mode production.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShopPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Shop"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Shop Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Gestion de la boutique"
        ],
        "summary": "Multi-boutiques : création d'une boutique",
        "description": "Cette méthode permet de créer une nouvelle boutique. La création de la boutique se fait à partir des informations présentes dans l'exemple.<br />\n<br />\n> **Méthode *Multi-boutiques*&nbsp;:** le multi-boutiques est une option liée aux **MarketPlaces**. Si vous intégrez PayGreen pour un **CMS** ou directement sur un site e-commerce, il est donc inutile de vous intéresser à cette méthode.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Shop",
            "description": "Modèle de données d'une boutique",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shop"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Shop"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Shop Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/shops": {
      "get": {
        "tags": [
          "Gestion de mes boutiques"
        ],
        "summary": "Liste des boutiques",
        "description": "Permet de lister toutes vos boutiques.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Shop"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Shop Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/account": {
      "get": {
        "tags": [
          "Gestion du compte principal"
        ],
        "summary": "Afficher le compte principal",
        "description": "Donne les informations sur le compte principal PayGreen.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Account Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Gestion du compte principal"
        ],
        "summary": "Met à jour le compte principal",
        "description": "Met à jour les données du compte principal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Account",
            "description": "Modèle de données du compte principal PayGreen",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Account"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Account Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/address": {
      "get": {
        "tags": [
          "Gestion de l'adresse"
        ],
        "summary": "Liste des adresses",
        "description": "Obtenir la liste de vos adresses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Address"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Address Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Gestion de l'adresse"
        ],
        "summary": "Créer une adresse",
        "description": "Créer une nouvelle adresse. Pour créer une nouvelle adresse, vous devez fournir les données présentes dans l'exemple.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Address",
            "description": "Modèle d'une adresse",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Address"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Address Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/shareholder": {
      "get": {
        "tags": [
          "Gestion des propriétaires"
        ],
        "summary": "Liste des propriétaires",
        "description": "Obtenir la liste des propriétaires",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Shareholder"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Shareholder Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Gestion des propriétaires"
        ],
        "summary": "Créer un propriétaire",
        "description": "Créer un nouveau propriétaire. Il vous est possible d'instancier plusieurs personnes en même temps en envoyant un tableau de plusieurs propriétaires.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Shareholder",
            "description": "Modèle d'un propriétaire",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Shareholder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Shareholder"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Shareholder Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/documents": {
      "get": {
        "tags": [
          "Gestion des documents/KYCs"
        ],
        "summary": "Liste des documents",
        "description": "Obtenir la liste des documents nécessaires",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Kyc"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Kyc Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Gestion des documents/KYCs"
        ],
        "summary": "Envoyer des documents",
        "description": "Permet d'envoyer un ou des document(s) manquant(s). Ici nous utilisons la méthode classique d'un formulaire : envoi des documents en multipart. Vous pouvez retrouver plus d'informations sur cette technique [ici](https://developer.mozilla.org/fr/docs/HTTP/Headers/Content-Type)",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "multipart/form-data; boundary=-------------------------acebdf13572",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Kyc"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Kyc Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/documents/{id}": {
      "get": {
        "tags": [
          "Gestion des documents/KYCs"
        ],
        "summary": "Obtenir un document",
        "description": "Obtenir plus d'informations sur un document",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID d'un document",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Kyc"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Kyc Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Gestion des documents/KYCs"
        ],
        "summary": "Supprimer un document",
        "description": "Supprimer un document à partir de son `id`",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID d'un document",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": " Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/paymenttype": {
      "get": {
        "tags": [
          "Les moyens de paiement"
        ],
        "summary": "Liste des moyens de paiement",
        "description": "Cette méthode permet de lister les moyens de paiement disponibles pour votre boutique.<br />\n<br />\nNotez que cette méthode ne retourne que les moyens de paiement activés&nbsp;: le `status` est donc toujours de `\"2\"`.<br />\nLe champ `data` est alors un tableau de moyens de paiement à parcourir.<br />\n<br />\nVous avez la possibilité d'affiner cette liste en ajoutant dans l'URL les deux paramètres suivants (optionnels)&nbsp;:<br />\n- Affichage d'un seul type de moyen de paiement avec le paramètre `paymentType`&nbsp;: par exemple, `paymentType=CB` permettra de ne retourner que la liste des moyens de paiement **CB/Visa/Mastercard**.<br />\n- Affichage des moyens de paiement par devise avec le paramètre `currency`&nbsp; par exemple, `currency=EUR` permet de ne retourner que les moyens de paiement permettant de régler en **euros**.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PartnerConfig"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "PartnerConfig Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payins/transaction/{id}": {
      "get": {
        "tags": [
          "Les transactions"
        ],
        "summary": "Détails",
        "description": "Cette requête vous permet d'obtenir tous les détails d'une transaction. Le montant de la transaction est toujours en centimes.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID de la transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Les transactions"
        ],
        "summary": "Confirmer une transaction",
        "description": "Cette requête vous permet de confirmer une transaction **e-caution** ou **à la livraison**. Le montant de la transaction doit être en centimes.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID de la transaction",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "ExecuteTransaction",
            "description": "Le montant de la transaction doit être en centimes.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExecuteTransaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "Les transactions"
        ],
        "summary": "Modification du montant",
        "description": "Cette requête vous permet de modifier le montant d'un paiement en cours. Vous pouvez uniquement modifier le montant d'un paiement en attente.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID de la transaction",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "PatchAmount",
            "description": "Le montant de la transaction doit être en centimes.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchAmount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Les transactions"
        ],
        "summary": "Remboursement",
        "description": "Cette requête vous permet de rembourser totalement ou partiellement une transaction. Si vous souhaitez effectuer un remboursement **partiel**, indiquez le montant à rembourser dans le champ `amount`. Si le paramètre `amount` n'est pas renseigné, la transaction sera **intégralement** remboursée. Le body doit être ```{\"amount\" : 500 }``` pour effectuer un remboursement de 5€. Vous recevrez en réponse le détail de la transaction concerné. Si le remboursement est intégral, la transaction passe au statut ```REFUNDED```.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID de la transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payins/transaction/cash": {
      "post": {
        "tags": [
          "Les transactions"
        ],
        "summary": "Paiement comptant",
        "description": "Cette requête vous permet de créer un paiement **comptant**. Le paramètre `returned_url` est optionnel&nbsp;: le renseigner vous permettra de rediriger automatiquement votre client vers la page de votre choix (sur votre e-commerce). S'il n'est pas renseigné, le client restera sur la page de confirmation de notre interface de paiement. *Voir le schéma de flux de paiement pour visualiser le parcours client*.<br />\n<br />\nLe paramètre `notified_url`, quant à lui, nous permet de vous envoyer [l'IPN de la transaction](#tag/Les-transactions). Dans le cas d'un paiement comptant, l'IPN est envoyée à partir du moment où le consommateur a réglé son achat. Cela peut parfois prendre plusieurs minutes.<br />\n<br />\nSi vous ne proposez pas la compensation carbone à vos clients (l'option **Tree**), il est inutile de renseigner le paramètre `idFingerprint`.<br />\n<br />\nLe paramètre `eligibleAmount` est optionnel&nbsp;: vous n'avez à le renseigner que si vous proposez à vos clients de payer avec un moyen de paiement nécessitant la gestion du montant éligible. Pour plus de détails, consultez la section [Les moyens de paiement](#tag/Les-moyens-de-paiement).<br />\n<br />\nLe paramètre `card` est optionnel&nbsp;: à moins de vouloir exécuter une [empreinte de carte](#tag/L'empreinte-de-carte), ce paramètre **ne doit donc pas être envoyé** dans la requête.<br />\n<br />\n> **Qu'est-ce que l'option OneClick&nbsp;?** Le OneClick permet au consommateur d'enregistrer sa carte bancaire lors d'un achat sur votre plateforme afin de la réutiliser ultérieurement, sans avoir à renseigner ses codes à nouveau. Si vous souhaitez proposer cette option à vos clients, il vous suffit de demander l'activation du module OneClick sur votre boutique PayGreen à notre support.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Payins",
            "description": "Transaction comptant ou à la livraison",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payins"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payins/transaction/subscription": {
      "post": {
        "tags": [
          "Les transactions"
        ],
        "summary": "Paiement abonnement",
        "description": "Cette requête vous permet de créer un **abonnement**. <br />\n<br />\nLe paramètre `returned_url` est optionnel&nbsp;: le renseigner vous permettra de rediriger automatiquement votre client vers la page de votre choix (sur votre e-commerce). S'il n'est pas renseigné, le client restera sur la page de confirmation de notre interface de paiement. *Voir le schéma de flux de paiement pour visualiser le parcours client*.<br />\n<br />\nLe paramètre `notified_url`, quant à lui, nous permet de vous envoyer [l'IPN de la transaction](#tag/Les-transactions). Dans le cas d'un abonnement, l'IPN est envoyée à chaque échéance (la première est immédiate). Cela peut parfois prendre plusieurs minutes.<br />\n<br />\nSi vous ne proposez pas la compensation carbone à vos clients (l'option **Tree**), il est inutile de renseigner le paramètre `idFingerprint`.<br />\n<br />\nLe paramètre `card` est optionnel&nbsp;: à moins de vouloir exécuter une [empreinte de carte](#tag/L'empreinte-de-carte), ce paramètre **ne doit donc pas être envoyé** dans la requête.<br />\n<br />\nLe paramètre `eligibleAmount` est inutile et ne doit pas être renseigné pour ce mode de paiement.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "PayinsRecc",
            "description": "Transaction abonnement ou N fois",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayinsRecc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payins/transaction/xtime": {
      "post": {
        "tags": [
          "Les transactions"
        ],
        "summary": "Paiement en plusieurs fois",
        "description": "Cette requête vous permet de créer un **paiement de type récurrent ou X fois sans frais**. Le paramètre `returned_url` est optionnel&nbsp;: le renseigner vous permettra de rediriger automatiquement votre client vers la page de votre choix (sur votre e-commerce). S'il n'est pas renseigné, le client restera sur la page de confirmation de notre interface de paiement. *Voir le schéma de flux de paiement pour visualiser le parcours client*.<br />\n<br />\nLe paramètre `notified_url`, quant à lui, nous permet de vous envoyer [l'IPN de la transaction](#tag/Les-transactions). Dans le cas d'un paiement en plusieurs fois, l'IPN est envoyée à chaque échéance (la première est immédiate). Cela peut parfois prendre plusieurs minutes.<br />\n<br />\nSi vous ne proposez pas la compensation carbone à vos clients (l'option **Tree**), il est inutile de renseigner le paramètre `idFingerprint`.<br />\n<br />\nLe paramètre `card` est optionnel&nbsp;: à moins de vouloir exécuter une [empreinte de carte](#tag/L'empreinte-de-carte), ce paramètre **ne doit donc pas être envoyé** dans la requête.<br />\n<br />\nLe paramètre `eligibleAmount` est inutile et ne doit pas être renseigné pour ce mode de paiement.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "PayinsRecc",
            "description": "Transaction abonnement ou N fois",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayinsRecc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payins/transaction/tokenize": {
      "post": {
        "tags": [
          "Les transactions"
        ],
        "summary": "Paiement avec confirmation",
        "description": "Cette requête vous permet de créer un **paiement de type comptant à la livraison**. Le paramètre `returned_url` est optionnel&nbsp;: le renseigner vous permettra de rediriger automatiquement votre client vers la page de votre choix (sur votre e-commerce). S'il n'est pas renseigné, le client restera sur la page de confirmation de notre interface de paiement. *Voir le schéma de flux de paiement pour visualiser le parcours client*.<br />\n<br />\nLe paramètre `notified_url`, quant à lui, nous permet de vous envoyer [l'IPN de la transaction](#tag/Les-transactions). Dans le cas d'un paiement avec confirmation, l'IPN est envoyée à la confirmation du paiement. Cela peut parfois prendre plusieurs minutes.<br />\n<br />\nSi vous ne proposez pas la compensation carbone à vos clients (l'option **Tree**), il est inutile de renseigner le paramètre `idFingerprint`.<br />\n<br />\nLe paramètre `eligibleAmount` est inutile et ne doit pas être renseigné pour ce mode de paiement.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Payins",
            "description": "Transaction comptant ou à la livraison",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Payins"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payins/transaction/cancel": {
      "post": {
        "tags": [
          "Les transactions"
        ],
        "summary": "Annulation",
        "description": "Cette requête vous permet d'annuler un paiement comptant, à la livraison, par abonnement ou en plusieurs fois. Vous devez indiquer l'id du paiement à annuler dans le champ `id`.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID de la transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payins/cardprint": {
      "post": {
        "tags": [
          "L'empreinte de carte"
        ],
        "summary": "Création d'une empreinte de carte",
        "description": "La création de l'empreinte de carte se traduit pour le consommateur par l'affichage d'une interface de paiement PayGreen, dans laquelle il va renseigner ses informations de carte. Le consommateur **n'est pas débité** lors de l'empreinte.<br />\n<br />\nDans le cas d'une empreinte de carte de type `SEPA`, l'interface PayGreen demande des informations sur le consommateur (nom, prénom, date de naissance, mail) ainsi qu'un Iban valide. Une fois ces données confirmées, le consommateur est redirigé chez notre partenaire bancaire pour signer son mandat.<br />\n<br />\nPour obtenir cette interface, vous devez envoyer une requête contenant notamment l'identifiant de la commande (`orderId`) et les informations sur l'acheteur (nom, prénom&hellip; dans le `buyer`). <br />\n<br />\nLe client peut ensuite renseigner ses informations de carte bancaire et valider.<br />\n<br />\nUne fois l'empreinte de carte effectuée, vous recevez une réponse contenant notamment un `id` (dans le `data`). Vous pourrez alors renseigner cet `id` dans le paramètre `token` de l'objet `card` lors de la création d'un **paiement comptant** ou **paiement par abonnement** ou **paiement en plusieurs fois**.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "CardPrint",
            "description": "Modèle d'une empreinte de carte.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CardPrint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/CardPrint"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "CardPrint Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "L'empreinte de carte"
        ],
        "summary": "Liste des empreintes de carte",
        "description": "Cette requête vous permet d'obtenir la liste des empreintes de carte de votre boutique",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CardPrint"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "CardPrint Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payins/cardprint/{id}": {
      "get": {
        "tags": [
          "L'empreinte de carte"
        ],
        "summary": "Détails",
        "description": "Cette requête vous permet d'obtenir tous les détails d'une empreinte de carte.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Api.Model.CardPrint.id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/CardPrint"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "CardPrint Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "L'empreinte de carte"
        ],
        "summary": "Supprimer une empreinte",
        "description": "Cette requête permet de supprimer une empreinte de don à partir de son `id`.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Api.Model.CardPrint.id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": " Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payins/multi/cash": {
      "post": {
        "tags": [
          "Paiement multidestinataire"
        ],
        "summary": "Créer un paiement multidestinataires",
        "description": "Créer un paiement entre plusieurs destinataires. Vous pouvez définir plusieurs destinataires dans le tableau `payments`. Le montant de la transaction doit être en centimes. Pour pouvoir faire des transactions, vous devez vous munir de l'`id` qui vous a été donné lors de votre empreinte de carte et l'utiliser dans le `token` de l'objet `card`.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "PayinsMulti",
            "description": "Modèle d'un paiement multidestinataires",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PayinsMulti"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/solidarity": {
      "get": {
        "tags": [
          "Gestion d'une association"
        ],
        "summary": "Liste des associations",
        "description": "Obtenir la liste des associations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Association"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Association Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/solidarity/{id}": {
      "patch": {
        "tags": [
          "Les dons"
        ],
        "summary": "Créer un don",
        "description": "Cette requête vous permet de créer un don lié à une transaction. Pour cela, il suffit de renseigner dans l'URL, après `/solidarity/`, l'`id` de la transaction à laquelle on souhaite ajouter un don.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID de la transaction",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Solidarity",
            "description": "Modèle de données d'un don.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Solidarity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Solidarity"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Solidarity Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "Les dons"
        ],
        "summary": "Afficher un don",
        "description": "Cette requête permet d'obtenir les détails d'un don à partir de son `id`.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID du don",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Solidarity"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Solidarity Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Les dons"
        ],
        "summary": "Supprimer un don",
        "description": "Cette requête permet de supprimer un don à partir de son `id`.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID du don",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": " Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payins/search": {
      "get": {
        "tags": [
          "Recherche"
        ],
        "summary": "Liste des transactions",
        "description": "Obtenir la liste des transactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payins/search/{id}": {
      "get": {
        "tags": [
          "Recherche"
        ],
        "summary": "Plus d'informations",
        "description": "Obtenir plus de détails sur une transaction à partir de son id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID de la transaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transaction Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/bank": {
      "get": {
        "tags": [
          "Gestion de mes RIB"
        ],
        "summary": "Afficher mon RIB",
        "description": "Obtenir le ou les RIB de la boutique",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Rib"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Rib Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Gestion de mes RIB"
        ],
        "summary": "Création d'un RIB",
        "description": "Permet de créer un nouveau RIB. Pour créer un RIB, il faut donner les valeurs présentes dans l'exemple. Pour permettre la validation de votre RIB auprès de notre partenaire, il est nécessaire de nous fournir un scan. Vous trouverez toutes les informations nécessaires à l'envoit de documents dans la partie Gestion des Documents/KYC",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Rib",
            "description": "Modèle de données d'un RIB",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rib"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Rib"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Rib Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payout/transfer/{id}": {
      "get": {
        "tags": [
          "Les virements"
        ],
        "summary": "Détails",
        "description": "Cette requête vous permet d'obtenir tous les détails d'un virement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Api.Model.Transfer.id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transfer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transfer Not Found"
          }
        }
      }
    },
    "/api/{identifiant}/payout/transfer": {
      "post": {
        "tags": [
          "Les virements"
        ],
        "summary": "Créer un virement",
        "description": "Cette méthode permet de créer un virement. Si vous créez un virement vers un compte bancaire (objet `bank`), votre RIB doit nécessairement être **valide**.<br />\n<br />\n### IPN d'un virement<br />\n<br />\nLe paramètre `callbackUrl` vous permet, s'il est renseigné, d'envoyer une notification (**IPN**) à vos serveurs lors du changement de statut d'un virement (afin de savoir précisément si et quand le virement que vous avez créé a bien été effectué). L'envoi de l'IPN peut parfois prendre plusieurs minutes.<br />\n<br />\nIl existe 4 statuts de virement&nbsp;:<br />\n- `WAITING`&nbsp;: statut d'un virement en attente. Statut par défaut.<br />\n- `SUCCESS`&nbsp;: virement effectué avec succès.<br />\n- `ERROR`&nbsp;: une erreur est survenue lors du virement (il n'a donc pas pu être effectué).<br />\n- `CANCEL`&nbsp;: virement annulé par notre équipe.<br />\n<br />\n> Dès lors que le statut du virement change (qu'il passe en `SUCCESS`, `ERROR` ou plus rarement, `CANCEL`), l'IPN est envoyée à l'URL renseignée dans le paramètre `callbackUrl`). *Voir le tableau ci-dessous pour le détails des informations renvoyées dans l'IPN*.<br />\n<table><tbody><tr><th>Paramètres</th><th>Exemples de valeur</th><th>Commentaires</th></tr><tr><td><code>pid</code></td><td><code>37330ff88bd7f7b0082d031d6eb59bb4</code></td><td>ID du virement</td></tr><tr><td><code>result</code></td><td><code>SUCCESS</code></td><td>Statut du virement. Ne peut être que <code>SUCCESS</code>, <code>ERROR</code> ou <code>CANCEL</code>.</td></tr><tr><td><code>orderId</code></td><td><code>&hellip;</code></td><td>Chaîne de caractère créée par le partenaire bancaire</td></tr><tr><td><code>shopId</code></td><td><code>ce642ce1613b47667dbd3785e5faf666</code></td><td>Votre identifiant unique <code>shop ID</code></td></tr><tr><td><code>amount</code></td><td><code>9900</code></td><td>Montant en centimes</td></tr><tr><td><code>createdAt</code></td><td><code>2018-12-27T11:07:59Z</code></td><td>Date et heure de la création du virement</td></tr><tr><td><code>scheduledAt</code></td><td><code>2018-12-27T11:07:59Z</code></td><td>Date et heure de la planification du virement</td></tr><tr><td><code>answeredAt</code></td><td><code>2018-12-27T11:07:59Z</code></td><td>Date et heure auxquelles le virement a été effectué</td></tr></tbody></table>",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Transfer",
            "description": "Modèle de données d'un virement.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "$ref": "#/definitions/Transfer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transfer Not Found"
          }
        }
      },
      "get": {
        "tags": [
          "Les virements"
        ],
        "summary": "Liste des virements",
        "description": "Cette requête vous permet d'obtenir la liste des virements de votre boutique",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "identifiant",
            "description": "Votre identifiant PayGreen",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Votre clé privée PayGreen (Bearer : votre-clé-privée)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "example": true
                },
                "message": {
                  "type": "string",
                  "example": ""
                },
                "code": {
                  "type": "integer",
                  "example": 0
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  }
                },
                "paginator": {
                  "type": "array",
                  "items": {
                    "current_page": {
                      "type": "integer"
                    },
                    "page_count": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "total_items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Transfer Not Found"
          }
        }
      }
    }
  },
  "host": "paygreen.fr",
  "definitions": {
    "AuthAccessToken": {
      "type": "object",
      "properties": {
        "accessPublic": {
          "type": "string",
          "example": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
          "readOnly": true
        },
        "accessSecret": {
          "type": "string",
          "example": "xxxx-xxxx-xxxx-xxxxxxxxxxxx",
          "readOnly": true
        },
        "ipAddress": {
          "type": "string",
          "example": "127.0.0.1"
        },
        "serverAddress": {
          "type": "string",
          "example": "127.0.0.1"
        },
        "email": {
          "type": "string",
          "example": "contact@paygreen.fr"
        },
        "name": {
          "type": "string",
          "example": "name"
        },
        "phoneNumber": {
          "type": "string",
          "example": "0952045779"
        },
        "expiresIn": {
          "type": "integer",
          "format": "int64",
          "example": 3600,
          "readOnly": true
        }
      },
      "required": [
        "ipAddress",
        "email",
        "name"
      ]
    },
    "\\Zend\\Http\\Response": {
      "type": "object",
      "properties": []
    },
    "Shop": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "37330ff88bd7f7b0082d031d6eb59bb4",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "example": "Mon E-Commerce"
        },
        "url": {
          "type": "string",
          "example": "https://paygreen.fr"
        },
        "privateKey": {
          "type": "string",
          "example": "c6d3-4a3f-a848-26d89c1afa60",
          "readOnly": true
        },
        "availableMode": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "CASH",
            "RECURRING"
          ]
        },
        "businessIdentifier": {
          "type": "string",
          "example": "111111111125354"
        },
        "companyType": {
          "type": "string",
          "example": "COMPANY"
        },
        "description": {
          "type": "string",
          "example": "Mon E-Commerce est un site de vente en ligne."
        },
        "activate": {
          "type": "boolean",
          "example": true,
          "readOnly": true
        },
        "validatedAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2004-02-12T15:19:21",
          "readOnly": true
        },
        "paiementType": {
          "type": "string",
          "enum": [
            "withVAD",
            "withoutVAD"
          ],
          "example": "withoutVAD"
        },
        "withVad": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "readOnly": true
            },
            "activate": {
              "type": "boolean",
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "withoutVad": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "readOnly": true
            },
            "activate": {
              "type": "boolean",
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "extra": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "redirectionAfterPaiement": "DIRECT",
            "sendPaiementConfirmation": "SEND",
            "notifyPaiementConfirmation": "SEND",
            "redirectMethod": "POST"
          }
        }
      },
      "required": [
        "name",
        "url",
        "availableMode",
        "businessIdentifier",
        "companyType",
        "description",
        "paiementType"
      ]
    },
    "ShopPatch": {
      "type": "object",
      "properties": {
        "validate": {
          "type": "boolean",
          "example": true
        },
        "activate": {
          "type": "boolean",
          "example": true
        }
      },
      "required": [
        "validate",
        "activate"
      ]
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "37330ff88bd7f7b0082d031d6eb59bb5",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "example": "Compte principal"
        },
        "siret": {
          "type": "string",
          "example": "111 111 111 111111"
        },
        "type": {
          "type": "string",
          "enum": [
            "account",
            "type"
          ],
          "example": "COMPANY"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2004-02-12T15:19:21",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "siret"
      ]
    },
    "Address": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string",
          "example": "80 Boulevard de Clichy"
        },
        "complement": {
          "type": "string",
          "readOnly": true
        },
        "zipCode": {
          "type": "string",
          "example": "75000"
        },
        "city": {
          "type": "string",
          "example": "Paris"
        },
        "country": {
          "type": "string",
          "example": "FR",
          "description": "Il s'agit de la norme ISO 3166-2 alpha-2 ou alpha-3."
        }
      },
      "required": [
        "street",
        "zipCode",
        "city",
        "country"
      ]
    },
    "Shareholder": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "firstName"
        },
        "lastName": {
          "type": "string",
          "example": "lastName"
        },
        "birthday": {
          "type": "string",
          "format": "date-time",
          "example": "YYYY-MM-DD"
        },
        "country": {
          "type": "string",
          "example": "FR",
          "description": "Il s'agit de la norme ISO 3166-2 alpha-2 ou alpha-3."
        }
      },
      "required": [
        "firstName",
        "lastName",
        "birthday",
        "country"
      ]
    },
    "Kyc": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "JUSTDOM",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "enum": [
            "99",
            "10",
            "1",
            "2",
            "-1"
          ],
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "readOnly": true
        },
        "callbackUrl": {
          "type": "string",
          "example": "http://example.com/callbackKyc"
        }
      }
    },
    "PartnerConfig": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "paymentType": {
          "type": "string",
          "example": "CB"
        },
        "status": {
          "type": "string",
          "example": "2"
        },
        "mode": {
          "type": "string"
        },
        "availablePaymentMode": {
          "type": "array",
          "example": [
            "CASH",
            "TOKENIZE"
          ],
          "readOnly": true
        },
        "iframe": {
          "type": "array",
          "example": {
            "CASH": {
              "minHeight": 430,
              "minWidth": 350
            }
          },
          "readOnly": true
        },
        "isLimited": {
          "type": "boolean",
          "example": true,
          "readOnly": true
        },
        "soldAvailable": {
          "type": "integer",
          "format": "int64",
          "example": 1000,
          "readOnly": true
        }
      },
      "required": [
        "mode"
      ]
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "tr15acde62ecfc1b8a2a1706b3f17a714e"
        },
        "paymentToken": {
          "type": "string",
          "example": "1NUytzyEgkdowJdwI1751555436136710",
          "readOnly": true
        },
        "paymentFolder": {
          "type": "string",
          "example": "prabcdef1234567890",
          "readOnly": true
        },
        "orderId": {
          "type": "string",
          "example": "test-123",
          "readOnly": true
        },
        "amount": {
          "type": "integer",
          "format": "int64",
          "example": 9900,
          "readOnly": true,
          "description": "Le montant est en centimes."
        },
        "currency": {
          "type": "string",
          "example": "EUR",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "CASH",
          "readOnly": true
        },
        "paymentType": {
          "type": "string",
          "example": "CB"
        },
        "url": {
          "type": "string",
          "example": "http://paygreen.fr/payment/execute/",
          "readOnly": true,
          "description": "Pour effectuer une transaction en utilisant le module Insite, il faut ajouter \"display=insite\" dans l'URL de paiement."
        },
        "testMode": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "result": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "readOnly": true,
              "example": "SUCCESSED"
            },
            "threeDSecureStatus": {
              "type": "string",
              "readOnly": true,
              "example": "3DS_SUCCESSED"
            },
            "paymentErrorStatus": {
              "type": "string",
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "card": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "readOnly": true,
              "example": "800025XXXXXX0004"
            },
            "expiration": {
              "type": "string",
              "readOnly": true,
              "example": "0121"
            },
            "bank": {
              "type": "string",
              "readOnly": true,
              "example": "BP"
            },
            "country": {
              "type": "string",
              "readOnly": true,
              "example": "FR"
            }
          },
          "readOnly": true
        },
        "buyer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "readOnly": true,
              "example": "123654789"
            },
            "lastName": {
              "type": "string",
              "readOnly": true,
              "example": "Pay"
            },
            "firstName": {
              "type": "string",
              "readOnly": true,
              "example": "Green"
            },
            "email": {
              "type": "string",
              "readOnly": true,
              "example": "contact@paygreen.fr"
            },
            "country": {
              "type": "string",
              "readOnly": true,
              "example": "FR"
            },
            "ipAddress": {
              "type": "string",
              "readOnly": true,
              "example": "127.0.0.1"
            },
            "companyName": {
              "type": "string",
              "example": "PayGreen"
            }
          }
        },
        "schedules": {
          "type": "object",
          "properties": {
            "rank": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "example": 129
            },
            "amount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "example": 101
            },
            "currency": {
              "type": "string",
              "readOnly": true,
              "example": "EUR"
            },
            "status": {
              "type": "string",
              "readOnly": true,
              "example": "EUR"
            },
            "valueAt": {
              "type": "string",
              "format": "date-time",
              "readOnly": true,
              "example": "101"
            },
            "id": {
              "type": "string",
              "readOnly": true,
              "example": "EUR"
            }
          },
          "readOnly": true
        },
        "donation": {
          "type": "object",
          "properties": {
            "associationId": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "example": 129
            },
            "status": {
              "type": "string",
              "readOnly": true,
              "example": "PENDING"
            },
            "type": {
              "type": "string",
              "readOnly": true,
              "example": "ROUNDING"
            },
            "amount": {
              "type": "integer",
              "format": "int64",
              "readOnly": true,
              "example": 101
            },
            "currency": {
              "type": "string",
              "readOnly": true,
              "example": "EUR"
            },
            "refundable": {
              "type": "boolean",
              "readOnly": true,
              "example": true
            }
          },
          "readOnly": true
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": {
            "orderId": "test-123",
            "display": "0"
          }
        },
        "eligibleAmount": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": {
            "ANCV": "1000",
            "RESTOFLASH": "0"
          }
        },
        "explanation": {
          "type": "string",
          "example": "Insufficient provision or exceeded credit",
          "readOnly": true
        },
        "idFingerprint": {
          "type": "integer",
          "format": "int64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "valueAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "answeredAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "ttl": {
          "type": "string",
          "example": "PT10M"
        }
      },
      "required": [
        "paymentType",
        "associationId",
        "amount",
        "currency",
        "valueAt"
      ]
    },
    "ExecuteTransaction": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64",
          "example": 9900,
          "description": "Le montant est en centimes."
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "amount",
        "message"
      ]
    },
    "PatchAmount": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64",
          "example": 9900,
          "description": "Le montant est en centimes."
        }
      },
      "required": [
        "amount"
      ]
    },
    "Payins": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "example": "123456"
        },
        "amount": {
          "type": "integer",
          "format": "int64",
          "example": 9000,
          "description": "Le montant est en centimes."
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "paymentType": {
          "type": "string",
          "example": "CB"
        },
        "returned_url": {
          "type": "string",
          "example": "http://example.com/retour-client",
          "description": "Adresse sur laquelle il faut rediriger le client après que l'action a été effectuée."
        },
        "notified_url": {
          "type": "string",
          "example": "http://example.com/retour-server",
          "description": "Adresse sur laquelle PayGreen peut faire des appels pour mettre à jour le statut."
        },
        "idFingerprint": {
          "type": "integer",
          "format": "int64"
        },
        "buyer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "123654789"
            },
            "lastName": {
              "type": "string",
              "example": "Pay"
            },
            "firstName": {
              "type": "string",
              "example": "Green"
            },
            "email": {
              "type": "string",
              "example": "contact@paygreen.fr"
            },
            "country": {
              "type": "string",
              "example": "FR"
            },
            "companyName": {
              "type": "string",
              "example": "PayGreen"
            }
          }
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": {
            "orderId": "test-123",
            "display": "0"
          }
        },
        "eligibleAmount": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": {
            "ANCV": "1000",
            "RESTOFLASH": "0"
          }
        },
        "card": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "abcdef1234567890"
            }
          }
        },
        "withPaymentLink": {
          "type": "boolean",
          "example": true,
          "readOnly": true
        },
        "emails": {
          "type": "array",
          "example": [
            "support@paygreen.fr",
            "test@test.fr"
          ],
          "readOnly": true
        },
        "contentMail": {
          "type": "string",
          "example": [
            "Voici ce le lien de paiement !"
          ],
          "readOnly": true
        },
        "ttl": {
          "type": "string",
          "example": "PT10M"
        }
      },
      "required": [
        "orderId",
        "amount",
        "currency"
      ]
    },
    "PayinsRecc": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "example": "123456"
        },
        "amount": {
          "type": "integer",
          "format": "int64",
          "example": 9000,
          "description": "Le montant est en centimes."
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "paymentType": {
          "type": "string",
          "example": "CB"
        },
        "returned_url": {
          "type": "string",
          "example": "http://example.com/retour-client",
          "description": "Adresse sur laquelle il faut rediriger le client après que l'action a été effectuée."
        },
        "notified_url": {
          "type": "string",
          "example": "http://example.com/retour-server",
          "description": "Adresse sur laquelle PayGreen peut faire des appels pour mettre à jour le statut."
        },
        "idFingerprint": {
          "type": "integer",
          "format": "int64"
        },
        "buyer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "123654789"
            },
            "lastName": {
              "type": "string",
              "example": "Pay"
            },
            "firstName": {
              "type": "string",
              "example": "Green"
            },
            "email": {
              "type": "string",
              "example": "contact@paygreen.fr"
            },
            "country": {
              "type": "string",
              "example": "FR"
            },
            "companyName": {
              "type": "string",
              "example": "PayGreen"
            }
          }
        },
        "orderDetails": {
          "type": "object",
          "properties": {
            "cycle": {
              "type": "integer",
              "format": "int64",
              "example": 40
            },
            "count": {
              "type": "integer",
              "format": "int64",
              "example": 3
            },
            "day": {
              "type": "integer",
              "format": "int64"
            },
            "startAt": {
              "type": "string",
              "format": "date-time"
            },
            "firstAmount": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "card": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "abcdef1234567890"
            }
          }
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": {
            "orderId": "test-123",
            "display": "0"
          }
        },
        "eligibleAmount": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": {
            "ANCV": "1000",
            "RESTOFLASH": "0"
          }
        },
        "withPaymentLink": {
          "type": "boolean",
          "example": true,
          "readOnly": true
        },
        "emails": {
          "type": "array",
          "example": [
            "support@paygreen.fr",
            "test@test.fr"
          ],
          "readOnly": true
        },
        "contentMail": {
          "type": "string",
          "example": [
            "Voici ce le lien de paiement !"
          ],
          "readOnly": true
        },
        "ttl": {
          "type": "string",
          "example": "PT10M"
        }
      },
      "required": [
        "orderId",
        "amount",
        "currency"
      ]
    },
    "CardPrint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "abcdef1234567890",
          "readOnly": true
        },
        "orderId": {
          "type": "string",
          "example": "test-123",
          "description": "Il s'agit du token lié à votre empreinte de carte."
        },
        "paymentType": {
          "type": "string",
          "example": "CB"
        },
        "returned_url": {
          "type": "string",
          "example": "http://example.com/retour-client",
          "description": "Adresse sur laquelle il faut rediriger le client après que l'action a été effectuée."
        },
        "notified_url": {
          "type": "string",
          "example": "http://example.com/retour-server",
          "description": "Adresse sur laquelle PayGreen peut faire des appels pour mettre à jour le statut."
        },
        "url": {
          "type": "string",
          "example": "http://paygreen.fr/payment/execute/",
          "readOnly": true
        },
        "testMode": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "result": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "readOnly": true,
              "example": "SUCCESSED"
            },
            "threeDSecureStatus": {
              "type": "string",
              "readOnly": true,
              "example": "3DS_SUCCESSED"
            },
            "paymentErrorStatus": {
              "type": "string",
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "card": {
          "type": "object",
          "properties": {
            "number": {
              "type": "string",
              "readOnly": true,
              "example": "800025XXXXXX0004"
            },
            "expiration": {
              "type": "string",
              "readOnly": true,
              "example": "0121"
            },
            "bank": {
              "type": "string",
              "readOnly": true,
              "example": "BP"
            },
            "country": {
              "type": "string",
              "readOnly": true,
              "example": "FR"
            }
          },
          "readOnly": true
        },
        "buyer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "123654789"
            },
            "lastName": {
              "type": "string",
              "example": "Pay"
            },
            "firstName": {
              "type": "string",
              "example": "Green"
            },
            "email": {
              "type": "string",
              "example": "contact@paygreen.fr"
            },
            "country": {
              "type": "string",
              "example": "FR"
            },
            "companyName": {
              "type": "string",
              "example": "PayGreen"
            }
          }
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": {
            "orderId": "test-123",
            "display": "0"
          },
          "readOnly": true
        },
        "explanation": {
          "type": "string",
          "example": "Insufficient provision or exceeded credit",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "valueAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "answeredAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "ttl": {
          "type": "string",
          "example": "PT10M"
        }
      },
      "required": [
        "orderId"
      ]
    },
    "PayinsMulti": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "example": "123456"
        },
        "amount": {
          "type": "integer",
          "format": "int64",
          "example": 9000,
          "description": "Le montant est en centimes."
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "returned_url": {
          "type": "string",
          "example": "http://example.com/retour-client",
          "description": "Adresse sur laquelle il faut rediriger le client après que l'action a été effectuée."
        },
        "notified_url": {
          "type": "string",
          "example": "http://example.com/retour-server",
          "description": "Adresse sur laquelle PayGreen peut faire des appels pour mettre à jour le statut."
        },
        "idFingerprint": {
          "type": "integer",
          "format": "int64"
        },
        "buyer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "123654789"
            },
            "lastName": {
              "type": "string",
              "example": "Pay"
            },
            "firstName": {
              "type": "string",
              "example": "Green"
            },
            "email": {
              "type": "string",
              "example": "contact@paygreen.fr"
            },
            "country": {
              "type": "string",
              "example": "FR"
            },
            "companyName": {
              "type": "string",
              "example": "PayGreen"
            }
          }
        },
        "metadata": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": {
            "orderId": "test-123",
            "display": "0"
          }
        },
        "card": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "abcdef1234567890"
            }
          }
        },
        "ttl": {
          "type": "string",
          "example": "PT10M"
        }
      },
      "required": [
        "orderId",
        "amount",
        "currency"
      ]
    },
    "Association": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "123",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "example": "Mon E-Asso"
        },
        "descriptif": {
          "type": "string",
          "example": "Mon E-Asso"
        },
        "image": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2004-02-12T15:19:21",
          "readOnly": true
        }
      },
      "required": [
        "name",
        "descriptif",
        "image"
      ]
    },
    "Solidarity": {
      "type": "object",
      "properties": {
        "associationId": {
          "type": "integer",
          "format": "int64",
          "example": 129
        },
        "status": {
          "type": "string",
          "enum": [
            "PENDING",
            "SUCCESS",
            "REFUND"
          ],
          "example": "PENDING",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "example": "ROUNDING",
          "readOnly": true
        },
        "amount": {
          "type": "integer",
          "format": "int64",
          "example": 101,
          "description": "Le montant est en centimes."
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "refundable": {
          "type": "boolean",
          "example": true,
          "readOnly": true
        }
      },
      "required": [
        "associationId",
        "amount",
        "currency"
      ]
    },
    "Rib": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 123,
          "readOnly": true
        },
        "bankName": {
          "type": "string",
          "example": "Ma Banque"
        },
        "iban": {
          "type": "string",
          "example": "FR7613106005002000743520962"
        },
        "bic": {
          "type": "string",
          "example": "CMCIFR2A"
        },
        "country": {
          "type": "string",
          "example": "FR",
          "description": "Il s'agit de la norme ISO 3166-2 alpha-2 ou alpha-3."
        },
        "status": {
          "type": "string",
          "enum": [
            "2",
            "1",
            "3",
            "-1",
            "4"
          ],
          "example": 1,
          "readOnly": true
        },
        "isDefault": {
          "type": "string",
          "example": 1,
          "readOnly": true
        }
      },
      "required": [
        "bankName",
        "iban",
        "bic",
        "country"
      ]
    },
    "Transfer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "37330ff88bd7f7b0082d031d6eb59bb4",
          "readOnly": true
        },
        "externalReference": {
          "type": "string",
          "example": "37330ff88bd7f7b0082d031d6eb59bb4",
          "readOnly": true
        },
        "publicReference": {
          "type": "string",
          "example": "37330ff88bd7f7b0082d031d6eb59bb4",
          "readOnly": true
        },
        "amount": {
          "type": "string",
          "example": 9900,
          "description": "Le montant est en centimes."
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "bankId": {
          "type": "integer",
          "format": "int64",
          "example": 123
        },
        "status": {
          "type": "string",
          "enum": [
            "CANCEL",
            "ERROR",
            "SUCCESS",
            "WAITING"
          ],
          "readOnly": true
        },
        "callbackUrl": {
          "type": "string",
          "example": "http://example.com/retour-server"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "example": "2004-02-12T15:19:21",
          "readOnly": true
        },
        "scheduledAt": {
          "type": "string",
          "format": "date-time",
          "example": "2004-02-12T23:00:00",
          "readOnly": true
        },
        "shopId": {
          "type": "integer",
          "format": "int64",
          "example": 123
        },
        "executedAt": {
          "type": "string",
          "format": "date-time",
          "example": "2004-02-12T23:00:05",
          "readOnly": true
        }
      },
      "required": [
        "amount",
        "currency",
        "shopId",
        "bankId"
      ]
    }
  }
}
